# T037 
# Contributer: LAUREN OGILVIE 101179971
# Contribiter: PATRICK FERENC, 101192901
# Submitted April 9th 2021

import numpy as np
from Cimpl import load_image, save_as, show, copy, choose_file
from point_manipulation import _take_first
from T037_image_filters import *

 

def interface_menu() -> str:  #not sure if this needs a specifc name 
    """
    T037
    Lauren Ogilvie
    Patrick Ferenc 
   
    Displays the user menu with all file management commands for the required user interface. Accepts the user input in lowercase or uppercase as a string and then returns the input from the user in uppercase format. 
  
    >>> L)oad image  S)ave-as
    >>> 3)-tone  X)treme contrast  T)int sepia  P)osterize
    >>> E)dge detect  D)raw curve  V)ertical flip  H)orizontal Flip 
    >>> Q)uit 
    >>>
    >>> : V
    V
    
    >>> L)oad image  S)ave-as
    >>> 3)-tone  X)treme contrast  T)int sepia  P)osterize
    >>> E)dge detect  D)raw curve  V)ertical flip  H)orizontal Flip 
    >>> Q)uit 
    >>>
    >>> : x
    X
    """
    usercommand = 0
    
    while usercommand != "Q" :
        print(" L)oad image  S)ave-as ")
        print(" G)reen image  R)ed image  B)lue image  C)ombine ")
        print(" 3)-tone  X)treme contrast  T)int sepia  P)osterize ")
        print(" E)dge detect  D)raw curve  V)ertical flip  H)orizontal Flip ")
        print(" Q)uit \n ")
        user_input = input(": ")
        user_input = user_input.upper()
        print(user_input)
        usercommand = user_input
        #for i in COMMANDS :
            #if i == user_input :
        if user_input == "L" :
            image = load_image(choose_file())
            show(image)
        elif user_input == "S" : # i honestly done know how this one works
            save_as(newimage)
        elif user_input == "G" : 
            newimage = green_channel(image)
            show(newimage)
        elif user_input == "R" : 
            newimage = red_channel(image)
            show(newimage)
        elif user_input == "B" : 
            newimage = blue_channel(image)
            show(newimage)
        elif user_input == "C" : 
            newimage = combine(image)
            show(newimage)
        elif user_input == "3" : 
            tone1 = input("Tone1 : ")
            tone2 = input("Tone2 : ")
            tone3 = input("Tone3 : ")
            newimage = three_tone(image, tone1, tone2, tone3)
            show(newimage)
        elif user_input == "X" : 
            newimage = extreme_contrast(image)
            show(newimage)            
        elif user_input == "T" : 
            newimage = sepia(image)
            show(newimage)
        elif user_input == "P" : 
            newimage = posterize(image)
            show(newimage)
        elif user_input == "E" : 
            thickness = input("Threshold thickness : ")
            newimage = detect_edges(image,thickness)
            show(newimage)  
        elif user_input == "D" :
            colour = input("Enter desired colour of line:")
            pointlist = []
            newimage = draw_curve(image, colour, pointlist)
            show(newimage)            
        elif user_input == "V" : 
            newimage = flip_vertical(image)
            show(newimage)
        elif user_input == "H" : 
            newimage = flip_horizontal(image)
            show(newimage) 
        
    return print("Quiting software")
    
COMMANDS = ['L','S','G','R','B','C','3','X','T','P','E','D','V','H','Q'] 
FILTERS = ["3","X","T","P","V","H"]
image = 0
